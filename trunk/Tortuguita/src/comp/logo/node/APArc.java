/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class APArc extends PPArc
{
    private TArc _arc_;
    private TInteger _angle_;
    private TInteger _radius_;

    public APArc()
    {
        // Constructor
    }

    public APArc(
        @SuppressWarnings("hiding") TArc _arc_,
        @SuppressWarnings("hiding") TInteger _angle_,
        @SuppressWarnings("hiding") TInteger _radius_)
    {
        // Constructor
        setArc(_arc_);

        setAngle(_angle_);

        setRadius(_radius_);

    }

    @Override
    public Object clone()
    {
        return new APArc(
            cloneNode(this._arc_),
            cloneNode(this._angle_),
            cloneNode(this._radius_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPArc(this);
    }

    public TArc getArc()
    {
        return this._arc_;
    }

    public void setArc(TArc node)
    {
        if(this._arc_ != null)
        {
            this._arc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arc_ = node;
    }

    public TInteger getAngle()
    {
        return this._angle_;
    }

    public void setAngle(TInteger node)
    {
        if(this._angle_ != null)
        {
            this._angle_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._angle_ = node;
    }

    public TInteger getRadius()
    {
        return this._radius_;
    }

    public void setRadius(TInteger node)
    {
        if(this._radius_ != null)
        {
            this._radius_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._radius_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._arc_)
            + toString(this._angle_)
            + toString(this._radius_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._arc_ == child)
        {
            this._arc_ = null;
            return;
        }

        if(this._angle_ == child)
        {
            this._angle_ = null;
            return;
        }

        if(this._radius_ == child)
        {
            this._radius_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._arc_ == oldChild)
        {
            setArc((TArc) newChild);
            return;
        }

        if(this._angle_ == oldChild)
        {
            setAngle((TInteger) newChild);
            return;
        }

        if(this._radius_ == oldChild)
        {
            setRadius((TInteger) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
