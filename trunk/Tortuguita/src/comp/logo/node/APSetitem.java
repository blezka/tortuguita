/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class APSetitem extends PPSetitem
{
    private TSetitem _setitem_;
    private TInteger _integer_;
    private PPList _pList_;
    private PPValue _pValue_;

    public APSetitem()
    {
        // Constructor
    }

    public APSetitem(
        @SuppressWarnings("hiding") TSetitem _setitem_,
        @SuppressWarnings("hiding") TInteger _integer_,
        @SuppressWarnings("hiding") PPList _pList_,
        @SuppressWarnings("hiding") PPValue _pValue_)
    {
        // Constructor
        setSetitem(_setitem_);

        setInteger(_integer_);

        setPList(_pList_);

        setPValue(_pValue_);

    }

    @Override
    public Object clone()
    {
        return new APSetitem(
            cloneNode(this._setitem_),
            cloneNode(this._integer_),
            cloneNode(this._pList_),
            cloneNode(this._pValue_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPSetitem(this);
    }

    public TSetitem getSetitem()
    {
        return this._setitem_;
    }

    public void setSetitem(TSetitem node)
    {
        if(this._setitem_ != null)
        {
            this._setitem_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._setitem_ = node;
    }

    public TInteger getInteger()
    {
        return this._integer_;
    }

    public void setInteger(TInteger node)
    {
        if(this._integer_ != null)
        {
            this._integer_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._integer_ = node;
    }

    public PPList getPList()
    {
        return this._pList_;
    }

    public void setPList(PPList node)
    {
        if(this._pList_ != null)
        {
            this._pList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pList_ = node;
    }

    public PPValue getPValue()
    {
        return this._pValue_;
    }

    public void setPValue(PPValue node)
    {
        if(this._pValue_ != null)
        {
            this._pValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pValue_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._setitem_)
            + toString(this._integer_)
            + toString(this._pList_)
            + toString(this._pValue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._setitem_ == child)
        {
            this._setitem_ = null;
            return;
        }

        if(this._integer_ == child)
        {
            this._integer_ = null;
            return;
        }

        if(this._pList_ == child)
        {
            this._pList_ = null;
            return;
        }

        if(this._pValue_ == child)
        {
            this._pValue_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._setitem_ == oldChild)
        {
            setSetitem((TSetitem) newChild);
            return;
        }

        if(this._integer_ == oldChild)
        {
            setInteger((TInteger) newChild);
            return;
        }

        if(this._pList_ == oldChild)
        {
            setPList((PPList) newChild);
            return;
        }

        if(this._pValue_ == oldChild)
        {
            setPValue((PPValue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
