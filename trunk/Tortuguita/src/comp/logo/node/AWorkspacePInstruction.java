/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class AWorkspacePInstruction extends PPInstruction
{
    private PPWorkspace _pWorkspace_;

    public AWorkspacePInstruction()
    {
        // Constructor
    }

    public AWorkspacePInstruction(
        @SuppressWarnings("hiding") PPWorkspace _pWorkspace_)
    {
        // Constructor
        setPWorkspace(_pWorkspace_);

    }

    @Override
    public Object clone()
    {
        return new AWorkspacePInstruction(
            cloneNode(this._pWorkspace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWorkspacePInstruction(this);
    }

    public PPWorkspace getPWorkspace()
    {
        return this._pWorkspace_;
    }

    public void setPWorkspace(PPWorkspace node)
    {
        if(this._pWorkspace_ != null)
        {
            this._pWorkspace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pWorkspace_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pWorkspace_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pWorkspace_ == child)
        {
            this._pWorkspace_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pWorkspace_ == oldChild)
        {
            setPWorkspace((PPWorkspace) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
