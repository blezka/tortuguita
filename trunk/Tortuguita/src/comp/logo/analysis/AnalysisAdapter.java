/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.analysis;

import java.util.*;
import comp.logo.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAListProg(AListProg node)
    {
        defaultCase(node);
    }

    public void caseAListaPInstructionlist(AListaPInstructionlist node)
    {
        defaultCase(node);
    }

    public void caseAInstPInstructionlist(AInstPInstructionlist node)
    {
        defaultCase(node);
    }

    public void caseARunPInstructionlist(ARunPInstructionlist node)
    {
        defaultCase(node);
    }

    public void caseAPrimitivesPInstruction(APrimitivesPInstruction node)
    {
        defaultCase(node);
    }

    public void caseACommunicationPInstruction(ACommunicationPInstruction node)
    {
        defaultCase(node);
    }

    public void caseAArithmeticPInstruction(AArithmeticPInstruction node)
    {
        defaultCase(node);
    }

    public void caseALogicPInstruction(ALogicPInstruction node)
    {
        defaultCase(node);
    }

    public void caseAGraphicsPInstruction(AGraphicsPInstruction node)
    {
        defaultCase(node);
    }

    public void caseAWorkspacePInstruction(AWorkspacePInstruction node)
    {
        defaultCase(node);
    }

    public void caseAControlPInstruction(AControlPInstruction node)
    {
        defaultCase(node);
    }

    public void caseACalltofunctionPInstruction(ACalltofunctionPInstruction node)
    {
        defaultCase(node);
    }

    public void caseAVarsPPrimitives(AVarsPPrimitives node)
    {
        defaultCase(node);
    }

    public void caseAListPPrimitives(AListPPrimitives node)
    {
        defaultCase(node);
    }

    public void caseASelectorsPPrimitives(ASelectorsPPrimitives node)
    {
        defaultCase(node);
    }

    public void caseAMutatorPPrimitives(AMutatorPPrimitives node)
    {
        defaultCase(node);
    }

    public void caseAFirstPSelectors(AFirstPSelectors node)
    {
        defaultCase(node);
    }

    public void caseAButfirstsPSelectors(AButfirstsPSelectors node)
    {
        defaultCase(node);
    }

    public void caseALastPSelectors(ALastPSelectors node)
    {
        defaultCase(node);
    }

    public void caseASetPMutator(ASetPMutator node)
    {
        defaultCase(node);
    }

    public void caseAPCommunication(APCommunication node)
    {
        defaultCase(node);
    }

    public void caseASumPArithmetic(ASumPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseADifferencePArithmetic(ADifferencePArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAMinusPArithmetic(AMinusPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAProductPArithmetic(AProductPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAModuloPArithmetic(AModuloPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAIntPArithmetic(AIntPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseARoundPArithmetic(ARoundPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseASqrtPArithmetic(ASqrtPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAPowerPArithmetic(APowerPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAExpPArithmetic(AExpPArithmetic node)
    {
        defaultCase(node);
    }

    public void caseAAndPLogic(AAndPLogic node)
    {
        defaultCase(node);
    }

    public void caseAOrPLogic(AOrPLogic node)
    {
        defaultCase(node);
    }

    public void caseANotPLogic(ANotPLogic node)
    {
        defaultCase(node);
    }

    public void caseAFdsPGraphics(AFdsPGraphics node)
    {
        defaultCase(node);
    }

    public void caseABksPGraphics(ABksPGraphics node)
    {
        defaultCase(node);
    }

    public void caseALtsPGraphics(ALtsPGraphics node)
    {
        defaultCase(node);
    }

    public void caseARtsPGraphics(ARtsPGraphics node)
    {
        defaultCase(node);
    }

    public void caseASetposPGraphics(ASetposPGraphics node)
    {
        defaultCase(node);
    }

    public void caseASetxyPGraphics(ASetxyPGraphics node)
    {
        defaultCase(node);
    }

    public void caseASetxPGraphics(ASetxPGraphics node)
    {
        defaultCase(node);
    }

    public void caseASetyPGraphics(ASetyPGraphics node)
    {
        defaultCase(node);
    }

    public void caseASethsPGraphics(ASethsPGraphics node)
    {
        defaultCase(node);
    }

    public void caseAHomePGraphics(AHomePGraphics node)
    {
        defaultCase(node);
    }

    public void caseAArcPGraphics(AArcPGraphics node)
    {
        defaultCase(node);
    }

    public void caseAClrPGraphics(AClrPGraphics node)
    {
        defaultCase(node);
    }

    public void caseAPenctrlPGraphics(APenctrlPGraphics node)
    {
        defaultCase(node);
    }

    public void caseAPdsPPencontrol(APdsPPencontrol node)
    {
        defaultCase(node);
    }

    public void caseAPusPPencontrol(APusPPencontrol node)
    {
        defaultCase(node);
    }

    public void caseASetpcsPPencontrol(ASetpcsPPencontrol node)
    {
        defaultCase(node);
    }

    public void caseASetpensizePPencontrol(ASetpensizePPencontrol node)
    {
        defaultCase(node);
    }

    public void caseAToPWorkspace(AToPWorkspace node)
    {
        defaultCase(node);
    }

    public void caseAMakesPWorkspace(AMakesPWorkspace node)
    {
        defaultCase(node);
    }

    public void caseARepeatPControlStructures(ARepeatPControlStructures node)
    {
        defaultCase(node);
    }

    public void caseAIfPControlStructures(AIfPControlStructures node)
    {
        defaultCase(node);
    }

    public void caseAIfelsePControlStructures(AIfelsePControlStructures node)
    {
        defaultCase(node);
    }

    public void caseAStopPControlStructures(AStopPControlStructures node)
    {
        defaultCase(node);
    }

    public void caseAGotoPControlStructures(AGotoPControlStructures node)
    {
        defaultCase(node);
    }

    public void caseAPWord(APWord node)
    {
        defaultCase(node);
    }

    public void caseAPList(APList node)
    {
        defaultCase(node);
    }

    public void caseAPFirst(APFirst node)
    {
        defaultCase(node);
    }

    public void caseAButfirstPButfirst(AButfirstPButfirst node)
    {
        defaultCase(node);
    }

    public void caseABfPButfirst(ABfPButfirst node)
    {
        defaultCase(node);
    }

    public void caseAPLast(APLast node)
    {
        defaultCase(node);
    }

    public void caseAPSetitem(APSetitem node)
    {
        defaultCase(node);
    }

    public void caseAPPrint(APPrint node)
    {
        defaultCase(node);
    }

    public void caseASumPSum(ASumPSum node)
    {
        defaultCase(node);
    }

    public void caseAPlusPSum(APlusPSum node)
    {
        defaultCase(node);
    }

    public void caseADifPDifference(ADifPDifference node)
    {
        defaultCase(node);
    }

    public void caseAMinPDifference(AMinPDifference node)
    {
        defaultCase(node);
    }

    public void caseAMinusPMinus(AMinusPMinus node)
    {
        defaultCase(node);
    }

    public void caseAMinPMinus(AMinPMinus node)
    {
        defaultCase(node);
    }

    public void caseAProdPProduct(AProdPProduct node)
    {
        defaultCase(node);
    }

    public void caseAMultPProduct(AMultPProduct node)
    {
        defaultCase(node);
    }

    public void caseAPModulo(APModulo node)
    {
        defaultCase(node);
    }

    public void caseAPInt(APInt node)
    {
        defaultCase(node);
    }

    public void caseAPRound(APRound node)
    {
        defaultCase(node);
    }

    public void caseAPSqrt(APSqrt node)
    {
        defaultCase(node);
    }

    public void caseAPPower(APPower node)
    {
        defaultCase(node);
    }

    public void caseAPExp(APExp node)
    {
        defaultCase(node);
    }

    public void caseAPAnd(APAnd node)
    {
        defaultCase(node);
    }

    public void caseAPOr(APOr node)
    {
        defaultCase(node);
    }

    public void caseAPNot(APNot node)
    {
        defaultCase(node);
    }

    public void caseAForwardPForward(AForwardPForward node)
    {
        defaultCase(node);
    }

    public void caseAFdPForward(AFdPForward node)
    {
        defaultCase(node);
    }

    public void caseABackPBack(ABackPBack node)
    {
        defaultCase(node);
    }

    public void caseABkPBack(ABkPBack node)
    {
        defaultCase(node);
    }

    public void caseALeftPLeft(ALeftPLeft node)
    {
        defaultCase(node);
    }

    public void caseALtPLeft(ALtPLeft node)
    {
        defaultCase(node);
    }

    public void caseARightPRight(ARightPRight node)
    {
        defaultCase(node);
    }

    public void caseARtPRight(ARtPRight node)
    {
        defaultCase(node);
    }

    public void caseAPSetpos(APSetpos node)
    {
        defaultCase(node);
    }

    public void caseAPSetxy(APSetxy node)
    {
        defaultCase(node);
    }

    public void caseAPSetx(APSetx node)
    {
        defaultCase(node);
    }

    public void caseAPSety(APSety node)
    {
        defaultCase(node);
    }

    public void caseASetheadingPSetheading(ASetheadingPSetheading node)
    {
        defaultCase(node);
    }

    public void caseASethPSetheading(ASethPSetheading node)
    {
        defaultCase(node);
    }

    public void caseAPHome(APHome node)
    {
        defaultCase(node);
    }

    public void caseAPArc(APArc node)
    {
        defaultCase(node);
    }

    public void caseAClearscreenPClearscreen(AClearscreenPClearscreen node)
    {
        defaultCase(node);
    }

    public void caseACsPClearscreen(ACsPClearscreen node)
    {
        defaultCase(node);
    }

    public void caseAPendownPPendown(APendownPPendown node)
    {
        defaultCase(node);
    }

    public void caseAPdPPendown(APdPPendown node)
    {
        defaultCase(node);
    }

    public void caseAPenupPPenup(APenupPPenup node)
    {
        defaultCase(node);
    }

    public void caseAPuPPenup(APuPPenup node)
    {
        defaultCase(node);
    }

    public void caseASetpencolorPSetpencolor(ASetpencolorPSetpencolor node)
    {
        defaultCase(node);
    }

    public void caseASetpcPSetpencolor(ASetpcPSetpencolor node)
    {
        defaultCase(node);
    }

    public void caseASizePSetpensize(ASizePSetpensize node)
    {
        defaultCase(node);
    }

    public void caseASizexyPSetpensize(ASizexyPSetpensize node)
    {
        defaultCase(node);
    }

    public void caseAPTo(APTo node)
    {
        defaultCase(node);
    }

    public void caseAVarwordPMake(AVarwordPMake node)
    {
        defaultCase(node);
    }

    public void caseAVarnumPMake(AVarnumPMake node)
    {
        defaultCase(node);
    }

    public void caseAPRepeat(APRepeat node)
    {
        defaultCase(node);
    }

    public void caseAIfPIf(AIfPIf node)
    {
        defaultCase(node);
    }

    public void caseAIfelsePIf(AIfelsePIf node)
    {
        defaultCase(node);
    }

    public void caseAPIfelse(APIfelse node)
    {
        defaultCase(node);
    }

    public void caseAPStop(APStop node)
    {
        defaultCase(node);
    }

    public void caseAPGoto(APGoto node)
    {
        defaultCase(node);
    }

    public void caseAIdentListPIdentList(AIdentListPIdentList node)
    {
        defaultCase(node);
    }

    public void caseAIdentPIdentList(AIdentPIdentList node)
    {
        defaultCase(node);
    }

    public void caseAIntPValue(AIntPValue node)
    {
        defaultCase(node);
    }

    public void caseADobPValue(ADobPValue node)
    {
        defaultCase(node);
    }

    public void caseAValueListPValueList(AValueListPValueList node)
    {
        defaultCase(node);
    }

    public void caseAValuePValueList(AValuePValueList node)
    {
        defaultCase(node);
    }

    public void caseASumValPSumList(ASumValPSumList node)
    {
        defaultCase(node);
    }

    public void caseASumListPSumList(ASumListPSumList node)
    {
        defaultCase(node);
    }

    public void caseADifValPDifList(ADifValPDifList node)
    {
        defaultCase(node);
    }

    public void caseADifListPDifList(ADifListPDifList node)
    {
        defaultCase(node);
    }

    public void caseAMultValPMultList(AMultValPMultList node)
    {
        defaultCase(node);
    }

    public void caseAMultListPMultList(AMultListPMultList node)
    {
        defaultCase(node);
    }

    public void caseATruePBoolean(ATruePBoolean node)
    {
        defaultCase(node);
    }

    public void caseAFalsePBoolean(AFalsePBoolean node)
    {
        defaultCase(node);
    }

    public void caseAVarPBoolean(AVarPBoolean node)
    {
        defaultCase(node);
    }

    public void caseAPredefPColor(APredefPColor node)
    {
        defaultCase(node);
    }

    public void caseALstPColor(ALstPColor node)
    {
        defaultCase(node);
    }

    public void caseTProcname(TProcname node)
    {
        defaultCase(node);
    }

    public void caseTWord(TWord node)
    {
        defaultCase(node);
    }

    public void caseTList(TList node)
    {
        defaultCase(node);
    }

    public void caseTFirst(TFirst node)
    {
        defaultCase(node);
    }

    public void caseTButfirst(TButfirst node)
    {
        defaultCase(node);
    }

    public void caseTBf(TBf node)
    {
        defaultCase(node);
    }

    public void caseTLast(TLast node)
    {
        defaultCase(node);
    }

    public void caseTSetitem(TSetitem node)
    {
        defaultCase(node);
    }

    public void caseTPush(TPush node)
    {
        defaultCase(node);
    }

    public void caseTPop(TPop node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseTPr(TPr node)
    {
        defaultCase(node);
    }

    public void caseTSum(TSum node)
    {
        defaultCase(node);
    }

    public void caseTDifference(TDifference node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTProduct(TProduct node)
    {
        defaultCase(node);
    }

    public void caseTModulo(TModulo node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTRound(TRound node)
    {
        defaultCase(node);
    }

    public void caseTSqrt(TSqrt node)
    {
        defaultCase(node);
    }

    public void caseTPower(TPower node)
    {
        defaultCase(node);
    }

    public void caseTExp(TExp node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTForward(TForward node)
    {
        defaultCase(node);
    }

    public void caseTFd(TFd node)
    {
        defaultCase(node);
    }

    public void caseTBack(TBack node)
    {
        defaultCase(node);
    }

    public void caseTBk(TBk node)
    {
        defaultCase(node);
    }

    public void caseTLeft(TLeft node)
    {
        defaultCase(node);
    }

    public void caseTLf(TLf node)
    {
        defaultCase(node);
    }

    public void caseTRight(TRight node)
    {
        defaultCase(node);
    }

    public void caseTRt(TRt node)
    {
        defaultCase(node);
    }

    public void caseTSetpos(TSetpos node)
    {
        defaultCase(node);
    }

    public void caseTSetxy(TSetxy node)
    {
        defaultCase(node);
    }

    public void caseTSetx(TSetx node)
    {
        defaultCase(node);
    }

    public void caseTSety(TSety node)
    {
        defaultCase(node);
    }

    public void caseTSetheading(TSetheading node)
    {
        defaultCase(node);
    }

    public void caseTSeth(TSeth node)
    {
        defaultCase(node);
    }

    public void caseTHome(THome node)
    {
        defaultCase(node);
    }

    public void caseTArc(TArc node)
    {
        defaultCase(node);
    }

    public void caseTClearscreen(TClearscreen node)
    {
        defaultCase(node);
    }

    public void caseTCs(TCs node)
    {
        defaultCase(node);
    }

    public void caseTPendown(TPendown node)
    {
        defaultCase(node);
    }

    public void caseTPd(TPd node)
    {
        defaultCase(node);
    }

    public void caseTPenup(TPenup node)
    {
        defaultCase(node);
    }

    public void caseTPu(TPu node)
    {
        defaultCase(node);
    }

    public void caseTSetpencolor(TSetpencolor node)
    {
        defaultCase(node);
    }

    public void caseTSetpc(TSetpc node)
    {
        defaultCase(node);
    }

    public void caseTSetpensize(TSetpensize node)
    {
        defaultCase(node);
    }

    public void caseTTo(TTo node)
    {
        defaultCase(node);
    }

    public void caseTMake(TMake node)
    {
        defaultCase(node);
    }

    public void caseTRun(TRun node)
    {
        defaultCase(node);
    }

    public void caseTRepeat(TRepeat node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTIfelse(TIfelse node)
    {
        defaultCase(node);
    }

    public void caseTStop(TStop node)
    {
        defaultCase(node);
    }

    public void caseTGoto(TGoto node)
    {
        defaultCase(node);
    }

    public void caseTEnd(TEnd node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBrk(TLBrk node)
    {
        defaultCase(node);
    }

    public void caseTRBrk(TRBrk node)
    {
        defaultCase(node);
    }

    public void caseTLKey(TLKey node)
    {
        defaultCase(node);
    }

    public void caseTRKey(TRKey node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMin(TMin node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTInteger(TInteger node)
    {
        defaultCase(node);
    }

    public void caseTDouble(TDouble node)
    {
        defaultCase(node);
    }

    public void caseTEndline(TEndline node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
