/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class AArithmeticPInstruction extends PPInstruction
{
    private PPArithmetic _pArithmetic_;

    public AArithmeticPInstruction()
    {
        // Constructor
    }

    public AArithmeticPInstruction(
        @SuppressWarnings("hiding") PPArithmetic _pArithmetic_)
    {
        // Constructor
        setPArithmetic(_pArithmetic_);

    }

    @Override
    public Object clone()
    {
        return new AArithmeticPInstruction(
            cloneNode(this._pArithmetic_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArithmeticPInstruction(this);
    }

    public PPArithmetic getPArithmetic()
    {
        return this._pArithmetic_;
    }

    public void setPArithmetic(PPArithmetic node)
    {
        if(this._pArithmetic_ != null)
        {
            this._pArithmetic_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pArithmetic_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pArithmetic_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pArithmetic_ == child)
        {
            this._pArithmetic_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pArithmetic_ == oldChild)
        {
            setPArithmetic((PPArithmetic) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
