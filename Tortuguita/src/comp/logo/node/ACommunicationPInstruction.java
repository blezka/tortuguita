/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class ACommunicationPInstruction extends PPInstruction
{
    private PPCommunication _pCommunication_;

    public ACommunicationPInstruction()
    {
        // Constructor
    }

    public ACommunicationPInstruction(
        @SuppressWarnings("hiding") PPCommunication _pCommunication_)
    {
        // Constructor
        setPCommunication(_pCommunication_);

    }

    @Override
    public Object clone()
    {
        return new ACommunicationPInstruction(
            cloneNode(this._pCommunication_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACommunicationPInstruction(this);
    }

    public PPCommunication getPCommunication()
    {
        return this._pCommunication_;
    }

    public void setPCommunication(PPCommunication node)
    {
        if(this._pCommunication_ != null)
        {
            this._pCommunication_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pCommunication_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pCommunication_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pCommunication_ == child)
        {
            this._pCommunication_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pCommunication_ == oldChild)
        {
            setPCommunication((PPCommunication) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
