/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class AListProg extends PProg
{
    private PPInstructionlist _pInstructionlist_;

    public AListProg()
    {
        // Constructor
    }

    public AListProg(
        @SuppressWarnings("hiding") PPInstructionlist _pInstructionlist_)
    {
        // Constructor
        setPInstructionlist(_pInstructionlist_);

    }

    @Override
    public Object clone()
    {
        return new AListProg(
            cloneNode(this._pInstructionlist_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListProg(this);
    }

    public PPInstructionlist getPInstructionlist()
    {
        return this._pInstructionlist_;
    }

    public void setPInstructionlist(PPInstructionlist node)
    {
        if(this._pInstructionlist_ != null)
        {
            this._pInstructionlist_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pInstructionlist_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pInstructionlist_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pInstructionlist_ == child)
        {
            this._pInstructionlist_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pInstructionlist_ == oldChild)
        {
            setPInstructionlist((PPInstructionlist) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
