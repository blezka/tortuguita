/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class AKeysPOperation extends PPOperation
{
    private PPOperation _pOperation_;

    public AKeysPOperation()
    {
        // Constructor
    }

    public AKeysPOperation(
        @SuppressWarnings("hiding") PPOperation _pOperation_)
    {
        // Constructor
        setPOperation(_pOperation_);

    }

    @Override
    public Object clone()
    {
        return new AKeysPOperation(
            cloneNode(this._pOperation_));
    }

    public void apply(Switch sw)
    {
    	//problem ((Analysis) sw).caseAKeysPOperation(this);
    }

    public PPOperation getPOperation()
    {
        return this._pOperation_;
    }

    public void setPOperation(PPOperation node)
    {
        if(this._pOperation_ != null)
        {
            this._pOperation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pOperation_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._pOperation_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._pOperation_ == child)
        {
            this._pOperation_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._pOperation_ == oldChild)
        {
            setPOperation((PPOperation) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
