/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class ASetpcPSetpencolor extends PPSetpencolor
{
    private TSetpc _setpc_;
    private TNumber1 _number1_;

    public ASetpcPSetpencolor()
    {
        // Constructor
    }

    public ASetpcPSetpencolor(
        @SuppressWarnings("hiding") TSetpc _setpc_,
        @SuppressWarnings("hiding") TNumber1 _number1_)
    {
        // Constructor
        setSetpc(_setpc_);

        setNumber1(_number1_);

    }

    @Override
    public Object clone()
    {
        return new ASetpcPSetpencolor(
            cloneNode(this._setpc_),
            cloneNode(this._number1_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASetpcPSetpencolor(this);
    }

    public TSetpc getSetpc()
    {
        return this._setpc_;
    }

    public void setSetpc(TSetpc node)
    {
        if(this._setpc_ != null)
        {
            this._setpc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._setpc_ = node;
    }

    public TNumber1 getNumber1()
    {
        return this._number1_;
    }

    public void setNumber1(TNumber1 node)
    {
        if(this._number1_ != null)
        {
            this._number1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._number1_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._setpc_)
            + toString(this._number1_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._setpc_ == child)
        {
            this._setpc_ = null;
            return;
        }

        if(this._number1_ == child)
        {
            this._number1_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._setpc_ == oldChild)
        {
            setSetpc((TSetpc) newChild);
            return;
        }

        if(this._number1_ == oldChild)
        {
            setNumber1((TNumber1) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
