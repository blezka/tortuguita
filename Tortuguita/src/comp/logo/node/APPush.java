/* This file was generated by SableCC (http://www.sablecc.org/). */

package comp.logo.node;

import comp.logo.analysis.*;

@SuppressWarnings("nls")
public final class APPush extends PPPush
{
    private TPush _push_;
    private TIdentifier _identifier_;
    private PPThing _pThing_;

    public APPush()
    {
        // Constructor
    }

    public APPush(
        @SuppressWarnings("hiding") TPush _push_,
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") PPThing _pThing_)
    {
        // Constructor
        setPush(_push_);

        setIdentifier(_identifier_);

        setPThing(_pThing_);

    }

    @Override
    public Object clone()
    {
        return new APPush(
            cloneNode(this._push_),
            cloneNode(this._identifier_),
            cloneNode(this._pThing_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPPush(this);
    }

    public TPush getPush()
    {
        return this._push_;
    }

    public void setPush(TPush node)
    {
        if(this._push_ != null)
        {
            this._push_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._push_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public PPThing getPThing()
    {
        return this._pThing_;
    }

    public void setPThing(PPThing node)
    {
        if(this._pThing_ != null)
        {
            this._pThing_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pThing_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._push_)
            + toString(this._identifier_)
            + toString(this._pThing_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._push_ == child)
        {
            this._push_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._pThing_ == child)
        {
            this._pThing_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._push_ == oldChild)
        {
            setPush((TPush) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._pThing_ == oldChild)
        {
            setPThing((PPThing) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
